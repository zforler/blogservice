<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.blog.entity.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createtime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="updatetime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="viewcount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="upvotecount" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="reviewswitch" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="keyword" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.blog.entity.Article">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createtime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="updatetime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="viewcount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="upvotecount" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="reviewswitch" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="keyword" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, title, createtime, updatetime, type, viewcount, author, upvotecount, status, 
    reviewswitch, keyword
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getArticleList"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    limit #{startRow} ,#{pageSize}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (title, createtime, updatetime, 
      type, viewcount, author, 
      upvotecount, status, reviewswitch, 
      keyword, content)
    values (#{title,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{viewcount,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, 
      #{upvotecount,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{reviewswitch,jdbcType=BIT}, 
      #{keyword,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="viewcount != null">
        viewcount,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="upvotecount != null">
        upvotecount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="reviewswitch != null">
        reviewswitch,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="viewcount != null">
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="upvotecount != null">
        #{upvotecount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="reviewswitch != null">
        #{reviewswitch,jdbcType=BIT},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.entity.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="viewcount != null">
        viewcount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="upvotecount != null">
        upvotecount = #{upvotecount,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="reviewswitch != null">
        reviewswitch = #{reviewswitch,jdbcType=BIT},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      viewcount = #{viewcount,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      upvotecount = #{upvotecount,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      reviewswitch = #{reviewswitch,jdbcType=BIT},
      keyword = #{keyword,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      viewcount = #{viewcount,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      upvotecount = #{upvotecount,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      reviewswitch = #{reviewswitch,jdbcType=BIT},
      keyword = #{keyword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>