<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.blog.entity.Comment">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="createtime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="articleid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="commentid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.blog.entity.Comment">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="createtime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="articleid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="commentid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, createtime, articleid, author, commentid, status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (createtime, articleid, author, 
      commentid, status, content
      )
    values (#{createtime,jdbcType=VARCHAR}, #{articleid,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, 
      #{commentid,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        createtime,
      </if>
      <if test="articleid != null">
        articleid,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="commentid != null">
        commentid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null">
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.entity.Comment">
    update comment
    <set>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="articleid != null">
        articleid = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null">
        commentid = #{commentid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.entity.Comment">
    update comment
    set createtime = #{createtime,jdbcType=VARCHAR},
      articleid = #{articleid,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      commentid = #{commentid,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.entity.Comment">
    update comment
    set createtime = #{createtime,jdbcType=VARCHAR},
      articleid = #{articleid,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      commentid = #{commentid,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>